#!/bin/sh

# Killing all running instances
pkill wmenu; pkill wmenu-run

# Function to dim the brightness
moon() {
	for i in $(seq 15 -1 5); do
		brightnessctl -q s $i
		sleep 0.01
	done
}

# Function to brighten the brightness
sun() {
	for i in $(seq 5 15); do
		brightnessctl -q s $i
		sleep 0.01
	done
}

# Function to check if swaylock is running
process_checker() {
	pidof swaylock >/dev/null
}


# Power menu using wmenu
mainprt=$(echo -e " Lockscreen\n Suspend\n Reboot\n Shutdown" | wmenu -i -p "Power Menu:")

case $mainprt in
	" Lockscreen")
		dunstify "   Locking ..." -r 1011 -u low -t 2000 &
		moon
		sleep 2
		faillock --user "$(whoami)" --reset
		swaylock -F -C "$HOME/.config/swaylock/config" &
		while process_checker; do
			sleep 1
		done
		sun
		;;
	" Suspend")
		prt1=$(echo -e "[YES]\nNo" | wmenu -p "We're Suspending?")
		if [ "$prt1" = "[YES]" ]; then
			dunstify "   Suspending ..." -r 1011 -u low -t 2000 &
			moon
			faillock --user "$(whoami)" --reset
			swaylock -F -C "$HOME/.config/swaylock/config" &
			systemctl suspend
			while process_checker; do
				sleep 1
			done
			sun
		else
			dunstify "Suspend cancelled." -r 1011 -t 3000
		fi
		;;
	" Shutdown")
		prt1=$(echo -e "[YES]\nNo" | wmenu -p "We're shutting down?")
		if [ "$prt1" = "[YES]" ]; then
			dunstify "   Shutting down ..." -r 1011 -u low -t 2000 &
			moon
			shutdown now
		else
			dunstify "Shutdown cancelled." -r 1011 -t 3000
		fi
		;;
	" Reboot")
		prt1=$(echo -e "[YES]\nNo" | wmenu -p "We're rebooting?")
		if [ "$prt1" = "[YES]" ]; then
			dunstify "   Rebooting ..." -r 1011 -u low -t 2000 &
			moon
			systemctl reboot
		else
			dunstify "Reboot cancelled." -r 1011 -t 3000
		fi
		;;
esac
