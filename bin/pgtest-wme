#!/bin/sh

# Killing all running instances
pkill wmenu; pkill wmenu-run

NOTIF_ID=7287                    # Notification ID
INTERFACE="wlp3s0"               # Adjust Wi-Fi interface if needed

get_icon() {
	nmcli -g NAME connection show | grep -w "$1" > /dev/null 2>&1 && echo "" || echo ""
}

iconc=$(get_icon "Click and Die")
iconp=$(get_icon "p00")

notify() { dunstify "$1" -r "$NOTIF_ID" -t "${3:-3000}" -u "${2:-low}"; }

check_internet() {
	notify "Checking for Internet access..." "normal" 5000
	if timeout 10 ping -c 2 -i 0.01 8.8.8.8 > /dev/null 2>&1; then
		notify "Connected to Internet" "normal" 5000
		return 0
	else
		notify "No Internet access" "critical" 5000
		return 1
	fi
}
turn_on_wifi() {
	if [ "$(nmcli radio wifi)" = "disabled" ]; then
		nmcli radio wifi on && notify "Wi-Fi Turned on" || notify "Failed to turn on Wi-Fi" "critical"
	fi
}
connect_wifi() {
	local ssid="$1" pass
	turn_on_wifi
	if nmcli c show "$ssid" > /dev/null 2>&1; then
		timeout 3 nmcli c up "$ssid" && notify "$ssid Connected" || notify "Failed to connect to $ssid" "critical"
	else
		while true; do
			pass=$(wmenu -p "Password for $ssid: " < /dev/null)
			if [ -z "$pass" ]; then
				notify "Password entry canceled" "critical"
				return 1
			fi
			if timeout 5 nmcli d wifi connect "$ssid" password "$pass" > /dev/null 2>&1; then
				notify "$ssid Connected"
				break
			else
				forget_wifi "$1" > /dev/null
				notify "Incorrect password for $ssid, try again" "critical"
			fi
		done
	fi
}
forget_wifi() { 
	nmcli c delete "$1" && notify "$1 Removed" || notify "Failed to remove $1" "critical"
}
wifi_menu() {
	local options="Ping\n$iconc Click and Die\n$iconp p00\nOn\nOff\nRestart\nDisconnect\nForget All"
	local choice=$(echo -e "$options" | wmenu -i -p "Wi-Fi Menu:" | sed 's/^[^a-zA-Z]*//')
	case "$choice" in
		Ping) check_internet ;;
		On) nmcli radio wifi on && notify "Wi-Fi Turned on" || notify "Wi-Fi On Failed" "critical" ;;
		Off) nmcli radio wifi off && notify "Wi-Fi Turned off" || notify "Wi-Fi Off Failed" "critical" ;;
		Restart) 
			spass=$(wmenu -P -p "sudo Password: " < /dev/null)
			if [ -z "$spass" ]; then
				notify "Sudo Password entry canceled" "critical"
				return 1
			fi
			echo "$spass" | sudo -S systemctl restart NetworkManager && 
				notify "Wi-Fi Restarted" || notify "Restart Failed" "critical" ;;
		Disconnect) nmcli d disconnect "$INTERFACE" && notify "Wi-Fi Disconnected" || notify "Disconnect Failed" "critical" ;;
		"Forget All") forget_wifi "Click and Die"; forget_wifi "p00"; notify "All connections forgotten" ;;
		"Click and Die"|"p00") wifi_submenu "$choice" ;;
		*) notify "Invalid selection" "critical" ;;
	esac
}
wifi_submenu() {
	local sub_choice=$(echo -e "Connect\nForget" | wmenu -i -p "Options for $1:")
	case "$sub_choice" in
		Connect) connect_wifi "$1" ;;
		Forget) forget_wifi "$1" ;;
		*) notify "Invalid option" "critical" ;;
	esac
}
case "$1" in
	ping) check_internet ;;
	on) nmcli radio wifi on && notify "Wi-Fi Turned on" || notify "Wi-Fi On Failed" "critical" ;;
	off) nmcli radio wifi off && notify "Wi-Fi Turned off" || notify "Wi-Fi Off Failed" "critical" ;;
	disconnect) nmcli d disconnect "$INTERFACE" && notify "Wi-Fi Disconnected" || notify "Disconnect Failed" "critical" ;;
	forgetall) forget_wifi "Click and Die"; forget_wifi "p00"; notify "All connections forgotten" ;;
	menu|*) wifi_menu ;;
esac
