#!/bin/bash

# Killing all running instances
pkill wmenu; pkill wmenu-run

# Get the current user
user=$(whoami)

# Reset faillock
faillock --user "$user" --reset

# Prompt for password using wmenu
pass=$(wmenu -P -p "Password for user [$user]" < /dev/null)
if [[ -z "$pass" ]]; then
    echo "Password input was empty."
    exit 1
fi

# Verify sudo privileges without running unnecessary commands
echo "$pass" | sudo -Sv &>/dev/null
if [[ $? -ne 0 ]]; then
    dunstify "Failed to authenticate sudo."
    exit 1
fi

# Function to check the status of cups.socket and handle enabling and starting it
handle_cups_socket() {
	if systemctl is-active --quiet cups.socket; then
		dunstify "Cups.socket is already running."
	else
		dunstify "Starting cups.socket..."
		echo "$pass" | sudo -S systemctl start cups.socket && dunstify "Cups.socket started."
	fi
}

# Handle cups.socket
handle_cups_socket

# Launch system-config-printer
if ! pgrep -f "system-config-printer" > /dev/null; then
	system-config-printer &>/dev/null
else
	dunstify "system-config-printer is running."
	exit 1
fi

# Prompt to stop cups.socket
opt=$(echo -e "Yes\nNo" | wmenu -p "Stop cups.socket?")
case $opt in
    Yes)
        echo "$pass" | sudo -S systemctl stop cups.socket && dunstify "Cups.socket stopped."
        ;;
    No|*)
        dunstify "Okay, leaving cups.socket running."
        ;;
esac

# Clean up sudo session
sudo -K
